Morheus thread 1 finished.
Loading benchmark: ../../benchmarks/pldi17/94/input.json
Specs: ../../benchmarks/pldi17/94/input.json
Searching between lengths [1,5]
Fixing sketch: 0
Caching R programs: 0
Partial evaluation: 1
----------------------------------
BenchmarkId:1
Depth:1
Output table:p94_output1
Input tables:p94_input1 
Sketch (Components):1 5 -1 2 -1 -1 -1 0 -1 -1 -1 -1 -1 -1 -1 
----------------------------------

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘compare’

The following object is masked from ‘package:base’:

    isTRUE

Init specifications: specs/spec1/*
specs/spec1/filter.json compName: filter
specs/spec1/gather.json compName: gather
specs/spec1/group_by.json compName: group_by
specs/spec1/inner_join.json compName: inner_join
specs/spec1/mutate.json compName: mutate
specs/spec1/select.json compName: select
specs/spec1/separate.json compName: separate
specs/spec1/spread.json compName: spread
specs/spec1/summarise.json compName: summarise
specs/spec1/unite.json compName: unite
Ngram re-reranked sketch file: sketches/size12-ngram.txt
Mapping from string to vector file: sketches/size12-map.txt
begin to synthesize.....
Numeric computations needed to solve this benchmark!
# sketches with deduction: 10
# sketches without deduction: 10
# predicates with deduction: 659
# predicates without deduction: 659
# predicates pruned (NA or size): 105
# R calls: 846
# R cached calls: 0
==================Profiling (ms)==================
Deduction on sketch generation: 40.538
Deduction on partial evaluation:116.542
R calls: 764.361
Total time: 887.481
[Percentage] R=86.127 Z3=17.6995 other=-3.82656
==================================================
R program: 
TBL_1=filter(p94_input1,`salary` > 23400.000000)
morpheus=summarise(TBL_1,MORPH298=mean(`salary`))
morpheus=as.data.frame(morpheus)
morpheus
Warning messages:
1: Too few values at 4 locations: 1, 2, 3, 4 
2: Too few values at 2 locations: 3, 4 
3: Too few values at 4 locations: 1, 2, 3, 4 
4: Too few values at 4 locations: 1, 2, 3, 4 
